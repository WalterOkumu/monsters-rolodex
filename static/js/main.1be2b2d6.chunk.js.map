{"version":3,"sources":["components/card/card.component.js","components/card-list/card-list.component.js","components/search-box/search-box.component.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","catch","err","console","log","this","filteredMonsters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAIcA,EAAO,SAAAC,GAAK,OACxB,sBAAKC,UAAY,iBAAjB,UACE,qBACEC,IAAG,+BAA4BF,EAAMG,QAAQC,GAA1C,0BACDC,IAAM,YAEV,mCAAOL,EAAMG,QAAQG,KAArB,OACA,kCAAKN,EAAMG,QAAQI,MAAnB,WCLSC,G,MAAW,SAAAR,GACtB,OACE,qBAAKC,UAAY,YAAjB,SACGD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACzB,cAAC,EAAD,CAAyBA,QAAWA,GAAvBA,EAAQC,WCNhBO,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACvB,uBACEC,KAAO,SACPF,YAAgBA,EAChBG,SAAaF,MCwCFG,G,wDAtCb,aAAe,IAAD,8BACZ,gBAcFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAdtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAUkB,OACxCC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,oBAO9B,WAAU,IAAD,EAC2BG,KAAKV,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YAEZc,EAAmBxB,EAASyB,QAChC,SAAA/B,GAAO,OAAIA,EAAQG,KAAK6B,cAAcC,SAASjB,EAAYgB,kBAE7D,OACE,sBAAKlC,UAAY,MAAjB,UACA,oDACA,cAAC,EAAD,CACEW,YAAc,kBACdC,aAAiBmB,KAAKnB,eAEtB,cAAC,EAAD,CAAUJ,SAAUwB,W,GAjCVI,IAAMC,YCGTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1be2b2d6.chunk.js","sourcesContent":["import React from 'react'\n\nimport './card.styles.css'\n\nexport const  Card = props => (\n  <div className = 'card-container'>\n    <img\n      src = {`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\n        alt = 'monster'\n    />\n    <h2> { props.monster.name } </h2>\n    <p> {props.monster.email} </p>\n  </div>\n)\n","import React from 'react'\n\nimport { Card } from '../card/card.component'\n\nimport './card-list.styles.css'\n\nexport const CardList = props => {\n  return (\n    <div className = 'card-list'>\n      {props.monsters.map(monster => (\n        <Card key = {monster.id} monster = {monster} />\n      ))}\n    </div>\n  )\n}\n","import React from 'react'\n\nimport './search-box.styles.css'\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n  <input\n    type = 'search'\n    placeholder = { placeholder }\n    onChange = { handleChange }\n  />\n)\n","import React from 'react'\n\n//import components\nimport { CardList } from './components/card-list/card-list.component'\nimport { SearchBox } from './components/search-box/search-box.component'\n\n// import css\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }))\n      .catch(err => console.log(err))\n  }\n\n  handleChange = e => {\n    this.setState({ searchField: e.target.value })\n  }\n\n  render() {\n    const { monsters, searchField } = this.state\n\n    const filteredMonsters = monsters.filter(\n      monster => monster.name.toLowerCase().includes(searchField.toLowerCase()))\n\n    return (\n      <div className = 'App'>\n      <h1> Monsters Rolodex </h1>\n      <SearchBox\n        placeholder = 'search monsters'\n        handleChange = { this.handleChange }\n      />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}